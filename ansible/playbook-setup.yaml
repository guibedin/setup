- hosts: localhost
  vars:
    user: bedin
  tasks:
    - name: Install base packages
      become: true
      ansible.builtin.apt:
        pkg:
          - ca-certificates 
          - gnupg
          - nfs-kernel-server
          - qemu-kvm 
          - libvirt-daemon-system 
          - build-essential 
          - libxslt-dev 
          - libxml2-dev 
          - libvirt-dev 
          - zlib1g-dev 
          - ruby-dev
          - virt-manager
          - apt-transport-https
          - tmux
          - fzf
          - htop
          - rofi
          - feh
          - brightnessctl
          - i3
          - ripgrep

    - name: Install Vagrant
      become: true
      ansible.builtin.shell: |
        # Vagrant repository
        wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor |  tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" |  tee /etc/apt/sources.list.d/hashicorp.list

        apt-get update
        apt-get install -y vagrant
        vagrant plugin install vagrant-libvirt

    - name: Install Node
      become: true
      ansible.builtin.shell: |
        curl -fsSL https://deb.nodesource.com/setup_21.x | sudo -E bash - && apt-get install -y nodejs

    - name: Install Go
      become: true
      ansible.builtin.shell: |
        wget https://go.dev/dl/go1.22.0.linux-amd64.tar.gz
        tar -C /usr/local -xzf go1.22.0.linux-amd64.tar.gz
        rm go1.22.0.linux-amd64.tar.gz

    - name: Install Kubernetes
      become: true
      ansible.builtin.shell: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        rm kubectl
        
    - name: Install kubectx and kubens
      become: true
      ansible.builtin.shell: |
        git clone https://github.com/ahmetb/kubectx /opt/kubectx
        ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx
        ln -s /opt/kubectx/kubens /usr/local/bin/kubens

    - name: Install Kind and Helm
      ansible.builtin.shell: |
        go install sigs.k8s.io/kind@v0.22.0
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Install Neovim
      become: true
      ansible.builtin.shell: |
        curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
        tar -C /opt -xzf nvim-linux64.tar.gz
        rm nvim-linux64.tar.gz

    - name: Clone Neovim Repo
      ansible.builtin.git:
        repo: git@github.com:guibedin/kickstart.nvim.git
        dest: ~/.config/nvim
        key_file: ~/.ssh/id_rsa

    - name: Create Dirs
      ansible.builtin.shell: |
        mkdir ~/.local/bin
        mkdir ~/.local/share/fonts
        mkdir ~/.config/i3
        mkdir ~/.config/kitty

    - name: Install Kitty
      ansible.builtin.shell: |
        curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin

    - name: Setup Kitty
      become: true
      ansible.builtin.shell: |
        update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator /home/guilhermes/.local/kitty.app/bin/kitty 50
        update-alternatives --set x-terminal-emulator /home/guilhermes/.local/kitty.app/bin/kitty
        ln -s ~/.local/kitty.app/bin/kitten /usr/bin/kitten
        ln -s ~/.local/kitty.app/bin/kitty /usr/bin/kitty

    - name: Setup Docker Repo
      become: true
      ansible.builtin.shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg

        # Docker Repository
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
           tee /etc/apt/sources.list.d/docker.list > /dev/null 
        apt-get update
    
    - name: Install Docker and Containerd
      become: true
      ansible.builtin.apt:
        pkg:
          - docker-ce 
          - docker-ce-cli 
          - containerd.io 
          - docker-buildx-plugin 
          - docker-compose-plugin

    - name: Setup docker, libvirt and nfs-kernel-server
      become: true
      ansible.builtin.shell: |
        groupadd docker
        usermod -aG docker {{ user }}
        systemctl enable docker.service
        systemctl enable containerd.service
        systemctl enable nfs-kernel-server.service

    - name: Create symlinks
      ansible.builtin.shell: |
        if [ -f ~/.zshrc ]; then
          rm ~/.zshrc
        fi

        if [ -f ~/.tmux.conf ]; then
          rm ~/.tmux.conf
        fi

        if [ -f ~/.config/kitty/kitty.conf ]; then
          rm ~/.config/kitty/kitty.conf
        fi

        # Dot files
        ln -s ~/personal/setup/dotfiles/.tmux.conf ~/.tmux.conf
        ln -s ~/personal/setup/dotfiles/.zshrc ~/.zshrc
        ln -s ~/personal/setup/dotfiles/.tmux-cht-command ~/.tmux-cht-command
        ln -s ~/personal/setup/dotfiles/.tmux-cht-languages ~/.tmux-cht-languages
        ln -s ~/personal/setup/dotfiles/.work_aliases ~/.work_aliases

        # Scripts
        ln -s ~/personal/setup/scripts/tmux-sessionizer.sh ~/.local/bin/tmux-sessionizer
        ln -s ~/personal/setup/scripts/easycd.sh ~/.local/bin/easycd

        # Confs
        ln -s ~/personal/setup/config/i3/config ~/.config/i3/config
        ln -s ~/personal/setup/config/i3/i3status.conf ~/.config/i3/i3status.conf
        ln -s ~/personal/setup/config/kitty/kitty.conf ~/.config/kitty/kitty.conf

        # Fonts
        ln -s ~/personal/setup/fonts/JetBrainsMonoNerdFont-Bold.ttf ~/.local/share/fonts/JetBrainsMonoNerdFont-Bold.ttf

        # i3 brightness control
        usermod -aG video {{ user }}

    - name: Get tpm for tmux
      ansible.builtin.shell: |
        git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

    - name: Setup Neovim
      ansible.builtin.shell: |
        nvim --headless "+Lazy! sync" +qa

