- hosts: all
  vars:
    user: vagrant 
  vars_files:
    - vars.yaml
  tasks:
    - name: Install base packages
      become: true
      ansible.builtin.apt:
        pkg:
          - git
          - zsh
          - wget
          - curl
          - ca-certificates 
          - gnupg
          - nfs-kernel-server
          - libvirt-daemon-system 
          - build-essential 
          - libxslt-dev 
          - libxml2-dev 
          - libvirt-dev 
          - zlib1g-dev 
          - apt-transport-https
          - tmux
          - fzf
          - htop
          - rofi
          - ripgrep

    - name: Create SSH Keys
      block:
        - name: Private SSH key
          copy:
            dest: ~/.ssh/id_rsa
            content: "{{ private_key }}"
            mode: '600'

        - name: Public SSH key
          copy:
            dest: ~/.ssh/id_rsa.pub
            content: "{{ public_key }}"
            mode: '600'
        
        - name: Knowns hosts
          copy:
            dest: ~/.ssh/known_hosts
            src: /vagrant/ssh/known_hosts

    - name: Change user shell to zsh 
      become: true
      ansible.builtin.user:
        name: "{{ user }}"
        shell: /bin/zsh

    - name: Install necessary tools
      block:
        - name: Install Node
          become: true
          ansible.builtin.shell: |
            curl -fsSL https://deb.nodesource.com/setup_21.x | sudo -E bash - && apt-get install -y nodejs

        - name: Install Go
          become: true
          ansible.builtin.shell: |
            wget https://go.dev/dl/go1.22.0.linux-amd64.tar.gz
            tar -C /usr/local -xzf go1.22.0.linux-amd64.tar.gz
            rm go1.22.0.linux-amd64.tar.gz

        - name: Install kubectl and tools
          become: true
          ansible.builtin.shell: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            rm kubectl

            git clone https://github.com/ahmetb/kubectx /opt/kubectx
            ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx
            ln -s /opt/kubectx/kubens /usr/local/bin/kubens
        
        - name: Install Neovim
          become: true
          ansible.builtin.shell: |
            curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
            tar -C /opt -xzf nvim-linux64.tar.gz
            rm nvim-linux64.tar.gz

        - name: Setup Docker Repo
          become: true
          ansible.builtin.shell: |
            install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            chmod a+r /etc/apt/keyrings/docker.gpg
    
            # Docker Repository
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
               tee /etc/apt/sources.list.d/docker.list > /dev/null 
            apt-get update
 
        - name: Install Docker and Containerd
          become: true
          ansible.builtin.apt:
            pkg:
              - docker-ce 
              - docker-ce-cli 
              - containerd.io 
              - docker-buildx-plugin 
              - docker-compose-plugin
    
        - name: Setup docker and nfs-kernel-server
          become: true
          ansible.builtin.shell: |
            groupadd docker
            usermod -aG docker {{ user }}
            systemctl enable docker.service
            systemctl enable containerd.service
            systemctl enable nfs-kernel-server.service

    - name: Setup Dirs and Configurations
      block:
        - name: Create Dirs
          ansible.builtin.shell: |
            mkdir -p ~/.local/bin
            mkdir -p ~/.local/share/fonts
   
        - name: Create symlinks
          ansible.builtin.shell: |
            if [ -f ~/.zshrc ]; then
              rm ~/.zshrc
            fi
    
            if [ -f ~/.tmux.conf ]; then
              rm ~/.tmux.conf
            fi
    
            # Dot files
            ln -s /vagrant/dotfiles/.tmux.conf ~/.tmux.conf
            ln -s /vagrant/dotfiles/.zshrc ~/.zshrc
            ln -s /vagrant/dotfiles/.tmux-cht-command ~/.tmux-cht-command
            ln -s /vagrant/dotfiles/.tmux-cht-languages ~/.tmux-cht-languages
            ln -s /vagrant/dotfiles/.work_aliases ~/.work_aliases
    
            # Scripts
            ln -s /vagrant/scripts/tmux-sessionizer.sh ~/.local/bin/tmux-sessionizer
            ln -s /vagrant/scripts/easycd.sh ~/.local/bin/easycd
    
            # Fonts
            ln -s /vagrant/fonts/JetBrainsMonoNerdFont-Bold.ttf ~/.local/share/fonts/JetBrainsMonoNerdFont-Bold.ttf
    
        - name: Get tpm for tmux
          ansible.builtin.shell: |
            git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    

    # - name: Clone Neovim Repo
    #       ansible.builtin.git:
    #         repo: git@github.com:guibedin/nvim.git
    #         dest: ~/.config/nvim
    #         key_file: ~/.ssh/id_rsa

    # - name:  Install Oh My ZSH
    #   ansible.builtin.shell: |
    #     sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

    # - name: Install Kind and Helm
    #   ansible.builtin.shell: |
    #     go install sigs.k8s.io/kind@v0.22.0
    #     curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
